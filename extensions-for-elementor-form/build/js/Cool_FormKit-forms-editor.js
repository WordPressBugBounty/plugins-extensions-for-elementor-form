(()=>{var e={525:e=>{e.exports=elementor.modules.controls.Repeater.extend({onBeforeRender(){this.$el.hide()},updateMap(e){const t=this,o={};t.collection.each((function(e){o[e.get("remote_id")]=e.get("local_id")})),t.collection.reset(),e.forEach((function(e){const n={remote_id:e.remote_id,remote_label:e.remote_label,remote_type:e.remote_type?e.remote_type:"",remote_required:!!e.remote_required&&e.remote_required,local_id:o[e.remote_id]?o[e.remote_id]:""};t.collection.add(n)})),t.render()},onRender(){elementor.modules.controls.Base.prototype.onRender.apply(this,arguments);const e=this;e.children.each((function(t){const o=t.children.last(),n={"":"- "+__("None","elementor")+" -"};let l=t.model.get("remote_label");t.model.get("remote_required")&&(l+='<span class="elementor-required">*</span>'),e.elementSettingsModel.get("form_fields").models.forEach((function(e,o){const l=t.model.get("remote_type");"text"!==l&&l!==e.get("field_type")||(n[e.get("custom_id")]=e.get("field_label")||"Field #"+(o+1))})),o.model.set("label",l),o.model.set("options",n),o.render(),t.$el.find(".elementor-repeater-row-tools").hide(),t.$el.find(".elementor-repeater-row-controls").removeClass("elementor-repeater-row-controls").find(".elementor-control").css({paddingBottom:0})})),e.$el.find(".elementor-repeater-add").remove(),e.children.length&&e.$el.show()}})},962:e=>{e.exports=elementorModules.editor.utils.Module.extend({renderField(e,t,o,n){var l=_.escape(t.css_classes),i=t.required?" required":"",r=t.checked_by_default?' checked="checked"':"",s="";return t.acceptance_text&&(s='<label for="form_field_'+o+'" class="cool-form__field-label">'+_.escape(t.acceptance_text)+"</label>"),`\n\t\t<div class="mdc-form-field">\n\t\t  <div class="mdc-checkbox">\n\t\t\t<input size="1" type="checkbox" ${r}\n\t\t\t  class="mdc-checkbox__native-control elementor-size-${n.input_size} ${l}"\n\t\t\t  name="form_field_${o}" id="form_field_${o}" ${i}>\n\t\t\t<div class="mdc-checkbox__background">\n\t\t\t  <svg class="mdc-checkbox__checkmark" viewBox="0 0 24 24">\n\t\t\t\t<path class="mdc-checkbox__checkmark-path" fill="none" d="M1.73,12.91 8.1,19.28 22.79,4.59"></path>\n\t\t\t  </svg>\n\t\t\t  <div class="mdc-checkbox__mixedmark"></div>\n\t\t\t</div>\n\t\t  </div>\n\t\t  ${s}\n\t\t</div>\n\t  `},onInit(){elementor.hooks.addFilter("cool_formkit/forms/content_template/field/acceptance",this.renderField,10,4)}})},837:e=>{e.exports=elementorModules.editor.utils.Module.extend({renderField(e,t,o,n){var l=_.escape(t.css_classes),i=t.required?" required":"",r=t.min_date?' min="'+t.min_date+'"':"",s=t.max_date?' max="'+t.max_date+'"':"",d=t.placeholder?' placeholder="'+_.escape(t.placeholder)+'"':"";return"yes"===t.use_native_date&&(l+=" cool-form-use-native"),`\n    <label class="cool-form-text mdc-text-field mdc-text-field--outlined ${""!==t.field_label&&n.show_labels?"":"mdc-text-field--no-label"} cool-field-size-${n.input_size}">\n      <span class="mdc-notched-outline">\n        <span class="mdc-notched-outline__leading"></span>\n        <span class="mdc-notched-outline__notch">\n          ${""!==t.field_label&&n.show_labels?`<span class="mdc-floating-label" id="date-label-${o}">${_.escape(t.field_label)}</span>`:""}\n        </span>\n        <span class="mdc-notched-outline__trailing"></span>\n      </span>\n      <input type="date" size="1" ${r} ${s} ${d}\n        pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}"\n        class="mdc-text-field__input cool-form__field cool-form-date-field elementor-field elementor-size-${n.input_size} ${l}"\n        name="form_field_${o}" id="form_field_${o}" ${i} >\n    </label>\n  `},onInit(){elementor.hooks.addFilter("cool_formkit/forms/content_template/field/date",this.renderField,10,4)}})},276:e=>{e.exports=elementorModules.editor.utils.Module.extend({renderField(e,t,o,n){var l=_.escape(t.css_classes),i=t.required?" required":"",r=t.placeholder?' placeholder="'+_.escape(t.placeholder)+'"':"";return`\n\t\t\t<label class="cool-form-text mdc-text-field mdc-text-field--outlined ${""!==t.field_label&&n.show_labels?"":"mdc-text-field--no-label"} cool-field-size-${n.input_size}">\n\t\t\t\t<span class="mdc-notched-outline">\n\t\t\t\t\t<span class="mdc-notched-outline__leading"></span>\n\t\t\t\t\t<span class="mdc-notched-outline__notch">\n\t\t\t\t\t\t${""!==t.field_label&&n.show_labels?`<span class="mdc-floating-label" id="tel-label-${o}">${_.escape(t.field_label)}</span>`:""}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="mdc-notched-outline__trailing"></span>\n\t\t\t\t</span>\n\t\t\t\t<input \n\t\t\t\t\ttype="${t.field_type}" \n\t\t\t\t\tsize="1" \n\t\t\t\t\t${r}  pattern="[0-9()-]+"\n\t\t\t\t\tclass="mdc-text-field__input cool-form__field elementor-field elementor-size-${n.input_size} ${l}"\n\t\t\t\t\tname="form_field_${o}" \n\t\t\t\t\tid="form_field_${o}" \n\t\t\t\t\t${i}\n\t\t\t\t>\n\t\t\t\t<i aria-hidden="true" class="material-icons mdc-text-field__icon mdc-text-field__icon--trailing cool-tel-error-icon" style="display:none">error</i>\n\t\t\t</label>\n\t\t\t<div class="mdc-text-field-helper-line">\n\t\t\t\t<div class="mdc-text-field-helper-text" id="cool-tel-error" aria-hidden="true"></div>\n\t\t\t</div>\n\t\t`},onInit(){elementor.hooks.addFilter("cool_formkit/forms/content_template/field/tel",this.renderField,10,4)}})},940:e=>{e.exports=elementorModules.editor.utils.Module.extend({renderField(e,t,o,n){var l=_.escape(t.css_classes),i=t.required?" required":"",r=t.placeholder?' placeholder="'+_.escape(t.placeholder)+'"':"";return"yes"===t.use_native_time&&(l+=" cool-form-use-native"),`\n    <label class="cool-form-text mdc-text-field mdc-text-field--outlined ${""!==t.field_label&&n.show_labels?"":"mdc-text-field--no-label"} cool-field-size-${n.input_size}">\n      <span class="mdc-notched-outline">\n        <span class="mdc-notched-outline__leading"></span>\n        <span class="mdc-notched-outline__notch">\n          ${""!==t.field_label&&n.show_labels?`<span class="mdc-floating-label" id="time-label-${o}">${_.escape(t.field_label)}</span>`:""}\n        </span>\n        <span class="mdc-notched-outline__trailing"></span>\n      </span>\n      <input type="time" size="1" ${r}\n        class="mdc-text-field__input cool-form__field cool-form-time-field elementor-field elementor-size-${n.input_size} ${l}"\n        name="form_field_${o}" id="form_field_${o}" ${i} >\n    </label>\n  `},onInit(){elementor.hooks.addFilter("cool_formkit/forms/content_template/field/time",this.renderField,10,4)}})},10:e=>{e.exports=elementorModules.editor.utils.Module.extend({enqueueRecaptchaJs(e,t){elementorFrontend.elements.$body.find('[src="'+e+'"]').length||elementorFrontend.elements.$body.append('<script src="'+e+'" id="recaptcha-'+t+'"><\/script>')},renderField(e,t){return e+='<div class="cool-form-field '+t.field_type+'">',(e+=this.getDataSettings(t))+"</div>"},getDataSettings(e){const t=elementor.config.forms.recaptcha;if(!t.enabled)return console.log("reCAPTCHA is not enabled"),'<div class="elementor-alert elementor-alert-info"> To use reCAPTCHA, you need to add the API Key and complete the setup process in Dashboard > Elementor > Cool FormKit Lite > Settings > reCAPTCHA. </div>';let o;return"recaptcha"==e.field_type&&(o='data-sitekey="'+t.site_key+'" data-type="'+t.type+'"',o+=' data-theme="'+e.recaptcha_style+'"',o+=' data-size="'+e.recaptcha_size+'"'),this.enqueueRecaptchaJs("https://www.google.com/recaptcha/api.js?onload=recaptchaLoaded&render=explicit",t.type),'<div class="cool-form-recaptcha" '+o+"></div>"},filterItem:e=>("recaptcha"===e.field_type&&(e.field_label=!1),e),onInit(){elementor.hooks.addFilter("cool_formkit/forms/content_template/item",this.filterItem),elementor.hooks.addFilter("cool_formkit/forms/content_template/field/recaptcha",this.renderField,10,4)}})},361:e=>{e.exports=elementorModules.editor.utils.Module.extend({enqueueRecaptchaJs(e,t){elementorFrontend.elements.$body.find('[src="'+e+'"]').length||elementorFrontend.elements.$body.append('<script src="'+e+'" id="recaptcha-'+t+'"><\/script>')},renderField(e,t){return e+='<div class="cool-form-field '+t.field_type+'">',(e+=this.getDataSettings(t))+"</div>"},getDataSettings(e){const t=elementor.config.forms.recaptcha_v3;if(!t.enabled)return console.log("reCAPTCHA is not enabled"),'<div class="elementor-alert elementor-alert-info"> To use reCAPTCHA V3, you need to add the API Key and complete the setup process in Dashboard > Elementor > Cool FormKit Lite > Settings > reCAPTCHA V3. </div>';let o;return"recaptcha_v3"==e.field_type&&(o='data-sitekey="'+t.site_key+'" data-type="'+t.type+'"',o+=' data-action="Form"',o+=' data-badge="'+e.recaptcha_badge+'"',o+=' data-size="invisible"'),this.enqueueRecaptchaJs("https://www.google.com/recaptcha/api.js?onload=recaptchaLoaded&render=explicit",t.type),'<div class="cool-form-recaptcha" '+o+"></div>"},filterItem:e=>("recaptcha"===e.field_type&&(e.field_label=!1),e),onInit(){elementor.hooks.addFilter("cool_formkit/forms/content_template/item",this.filterItem),elementor.hooks.addFilter("cool_formkit/forms/content_template/field/recaptcha_v3",this.renderField,10,4)}})},896:e=>{e.exports=function(){var e,t,o,n=function(){var t=e.children.findByModelCid(o.cid);t&&t.render()},l=function(){var e,l=t.get("settings").get("form_fields").where({field_type:"email"});l=_.reject(l,{field_label:""}),e=_.map(l,(function(e){return{id:e.get("custom_id"),label:sprintf("%s Field",e.get("field_label"))}})),o.set("options",{"":o.get("options")[""]}),_.each(e,(function(e){o.get("options")[e.id]=e.label})),n()},i=function(e){o.get("options")[""]=e.get("email_from"),n()},r=function(e){e.get("custom_id")&&"email"===e.get("field_type")&&l(),e.changed.email_from&&i(e)};elementor.hooks.addAction("panel/open_editor/widget/form-lite",(function(n,s){e=n.getCurrentPageView(),t=s,o=e.collection.findWhere({name:"email_reply_to"});var d=t.get("settings");d.on("change",r),i(d),l()}))}}},t={};function o(n){var l=t[n];if(void 0!==l)return l.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,o),i.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e={};o.r(e),o.d(e,{FormFieldsAddFirstStep:()=>l,FormFieldsSanitizeCustomId:()=>t,FormFieldsSetCustomId:()=>n,FormFieldsUpdateShortCode:()=>r,FormSanitizeId:()=>i});class t extends $e.modules.hookData.Dependency{ID_SANITIZE_FILTER=/[^\w]/g;getCommand(){return"document/elements/settings"}getId(){return"cool-forms-fields-sanitize-custom-ids"}getContainerType(){return"repeater"}getConditions(e){return void 0!==e.settings.custom_id}apply(e){const{containers:t=[e.container],settings:o}=e,{custom_id:n}=o;return!n.match(this.ID_SANITIZE_FILTER)||(t.forEach((e=>{const t=e.panel.getControlView("form_fields").children.findByModel(e.settings).children.find((e=>"custom_id"===e.model.get("name")));t.render(),t.$el.find("input").trigger("focus")})),!1)}}class n extends $e.modules.hookData.After{getCommand(){return"document/repeater/insert"}getId(){return"cool-forms-fields-set-custom-ids"}getContainerType(){return"widget"}getConditions(e){return"form_fields"===e.name}apply(e,t){const{containers:o=[e.container]}=e,n=$e.commands.isCurrentFirstTrace("document/repeater/duplicate");return o.forEach((e=>{const o=e.repeaters.form_fields.children.find((e=>!!e&&t.get("_id")===e.id));!n&&o.settings.get("custom_id")||$e.run("document/elements/settings",{container:o,settings:{custom_id:"field_"+o.id},options:{external:!0}})})),!0}}class l extends $e.modules.hookData.After{getCommand(){return"document/elements/settings"}getId(){return"cool-forms-fields-first-step"}getContainerType(){return"repeater"}getConditions(e){const{containers:t=[e.container]}=e;return"cool-form"===t[0].parent.parent.model.get("widgetType")&&"step"===e.settings.field_type}apply(e){const{containers:t=[e.container]}=e;return t.forEach((e=>{"step"!==e.parent.children[0].settings.get("field_type")&&$e.run("document/repeater/insert",{container:e.parent.parent,name:"form_fields",model:{field_type:"step"},options:{at:0,external:!0}})})),!0}}class i extends $e.modules.hookData.Dependency{ID_SANITIZE_FILTER=/[^\w]/g;getCommand(){return"document/elements/settings"}getId(){return"cool-forms-sanitize-ids"}getContainerType(){return"widget"}getConditions(e){return void 0!==e.settings.form_id}apply(e){const{container:t,settings:o}=e,{form_id:n}=o;if(n.match(this.ID_SANITIZE_FILTER)){const e=t.panel.getControlView("form_id");return e.render(),e.$el.find("input").trigger("focus"),!1}return!0}}class r extends $e.modules.hookUI.After{getCommand(){return"document/elements/settings"}getId(){return"cool-forms-forms-fields-update-shortcodes"}getContainerType(){return"repeater"}getConditions(e){return!(!$e.routes.isPartOf("panel/editor")||void 0===e.settings.custom_id)}apply(e){const{containers:t=[e.container]}=e;t.forEach((e=>{e.panel.getControlView("form_fields").children.find((t=>e.id===t.model.get("_id"))).children.find((e=>"shortcode"===e.model.get("name"))).render()}))}}class s extends $e.modules.ComponentBase{getNamespace(){return"cool-forms-lite"}defaultHooks(){return this.importHooks(e)}}var d=o(525),a=o.n(d);const c=class extends elementor.modules.controls.RepeaterRow{toggleFieldTypeControl(e){const t=this.collection.findWhere({name:"field_type"});this.children.findByModel(t).$el.toggle(e)}toggleStepField(e){this.$el.toggleClass("elementor-repeater-row--form-step",e)}toggleTools(e){this.ui.removeButton.add(this.ui.duplicateButton).toggle(e)}},m=class extends elementor.modules.controls.Repeater{className(){let e=super.className();return e+=" elementor-control-type-repeater",e}getChildView(){return c}initialize(...e){super.initialize(...e);const t=this.container.settings.get("form_fields");this.listenTo(t,"change",(e=>this.onFormFieldChange(e))).listenTo(t,"remove",(e=>this.onFormFieldRemove(e)))}getFirstChild(){return this.children.findByModel(this.collection.models[0])}lockFirstStep(){const e=this.getFirstChild();"step"===e.model.get("field_type")&&(1<this.collection.where({field_type:"step"}).length&&(e.toggleFieldTypeControl(!1),e.toggleTools(!1)),e.toggleSort(!1))}onFormFieldChange(e){const t=e.changed.field_type;if(!t||"step"!==t&&"step"!==e._previousAttributes.field_type)return;const o="step"===t;this.children.findByModel(e).toggleStepField(o),this.onStepFieldChanged(o)}onFormFieldRemove(e){"step"===e.get("field_type")&&this.onStepFieldChanged(!1)}onStepFieldChanged(e){if(e)return void this.lockFirstStep();const t=this.collection.where({field_type:"step"});if(t.length>1)return;const o=this.getFirstChild();if(1===t.length)return o.toggleTools(!0),void o.toggleFieldTypeControl(!0);o.toggleSort(!0)}onAddChild(e){super.onAddChild(e),"step"===e.model.get("field_type")&&(this.lockFirstStep(),e.toggleStepField(!0))}};class p extends elementorModules.editor.utils.Module{onElementorInit(){const e=o(896),t=o(10),n=o(361);this.replyToField=new e,this.recaptcha=new t,this.recaptcha3=new n;const l=o(962),i=o(276),r=o(837),s=o(940);this.Fields={tel:new i("cool-form"),acceptance:new l("cool-form"),date:new r("cool-form"),time:new s("cool-form")},elementor.addControlView("Fields_map",a()),elementor.addControlView("form-fields-repeater",m),this.onElementorInitComponents()}onElementorInitComponents(){$e.components.register(new s({manager:this}))}}const f=new p;window.Cool_FormKitForms=f})()})();